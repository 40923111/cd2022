var tipuesearch = {"pages": [{'title': 'About', 'text': '', 'tags': '', 'url': 'About.html'}, {'title': 'midterm', 'text': 'W7任務： \n 1.利用隨身程式系統編譯 SCARA robot 模擬系統. \n 2.繪製 Pick and Place demo 範例所需的零組件，自訂連桿尺寸，並完成 Coppeliasim 4.1.0、4.2.0 與 4.3.0 版的 MTB 機械手臂 Pick and Place 模擬。 \n 當前進度： 1.已完成 2.已完成零件繪製。 \n W8任務： \n 1.uarm 各零件工程圖 \n 零件檔: https://gmnfuedutw-my.sharepoint.com/:f:/g/personal/40923111_gm_nfu_edu_tw/Eg9zB3kmOpVArCv3xbUZf6IBAd6yM-H5w2KqK4-aY1qrDg?e=qpLfJA \n 工程圖: https://drive.google.com/drive/folders/1dqfmdfYTwDR9Hr80g17XtA-oG470Nke2?usp=sharing \n 2.uarm 組合圖 STL 格式轉入 CoppeliaSim \n 3.GUI slider 控制前三軸作動 \n 4.cmsimde 中第一階頁面, 標題為 midterm \n 5.網誌名稱為 midterm.html \n 6.流程與心得簡報 \n \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n', 'tags': '', 'url': 'midterm.html'}, {'title': 'w16', 'text': '', 'tags': '', 'url': 'w16.html'}, {'title': 'Visualization Stream-1', 'text': '打開coppeliasim打開uarm_nx_tkinter_gui_control_exhaustiv檔，再來將uarm_tkinter_control.py丟到scite打開執行他，之後先把coppeliasim裡的程式先執行，外部在執行，在按to cannect連接起來，就可以用遠端控制。 \n \n \n', 'tags': '', 'url': 'Visualization Stream-1.html'}, {'title': 'rotating_cuboid-1', 'text': '\n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n', 'tags': '', 'url': 'rotating_cuboid-1.html'}, {'title': 'Online Exam-1', 'text': '1.已知左側綠色底座的 uArm 機械手臂, 其基座座標原點位於絕對座標 (1.0, 0.25, 0), 啟動模擬後 green_suctionpad_frame 座標原點則位於 (0.22859, 0.26047, 0.36576), 請列出運算式說明, 啟動模擬後 joint1, joint2 與 joint3 分別以逆時針旋轉 5 度後, 求 green_suctionpad_frame 的絕對座標值. \n 2.已知左側 uarm 前方的紅色方塊頂端中心座標值為 (0.2, 0.4, 0.1), 請列出運算式說明左側 uarm 機械手臂的 joint1, joint2 與 joint3 該如何旋轉才能讓 end effector 的吸盤末端中心點移動至紅色方塊頂端中心? \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'Online Exam-1.html'}, {'title': 'Nx_wink', 'text': '圖檔:\xa0 https://drive.google.com/drive/folders/1wbnDwd6IAOg33UJVGF2t8vmvMRrWvids?usp=sharing \n 這部影片主要解說基本的NX入門常用操作，從開始的尺寸預設(代號 , 尺忖公式)到草圖建立→長料 →除料→挖孔→基本的外型長出到最後的佈圖讓入門者能夠快速地了解它的功用和快速上手 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \nloop="loop" muted=""playsinline=""autoplay="autoplay"> \n \n   \n \n \n \n', 'tags': '', 'url': 'Nx_wink.html'}, {'title': 'HW', 'text': '', 'tags': '', 'url': 'HW.html'}, {'title': 'W7', 'text': 'NX12零件檔:\xa0 https://drive.google.com/drive/folders/1k42ZL-B41HfSEFOe_a369msJcuVl0bty?usp=sharing \n 轉入\xa0 CoppeliaSim 設定 MTB 場景 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \nautoplay="autoplay"loop="loop" muted="" playsinline="" \n \n   \n \n \n \n \n \n \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'W7.html'}, {'title': 'W8', 'text': '第一部:機械手臂NX組合過程 \n 組合圖檔及模擬檔:\xa0 https://drive.google.com/drive/folders/1dqfmdfYTwDR9Hr80g17XtA-oG470Nke2?usp=sharing \n 第二部:組合檔轉stl後匯入 CoppeliaSim \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \nloop="loop" muted="" playsinline=""autoplay="autoplay"> \n \n   \n \n \n \n \n \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'W8.html'}, {'title': 'w10', 'text': '', 'tags': '', 'url': 'w10.html'}, {'title': 'w10_block_ui', 'text': '\n \n script> var winkVideoData = { dataVersion: 1, frameRate: 10, buttonFrameLength: 5, buttonFrameOffset: 2, frameStops: { }, }; \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n   \n \n \n \n \n', 'tags': '', 'url': 'w10_block_ui.html'}, {'title': 'w10_nx_integ', 'text': '\n \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \nloop="loop" muted="" playsinline=""autoplay="autoplay">\n \n \n   \n \n \n \n \n \n', 'tags': '', 'url': 'w10_nx_integ.html'}, {'title': 'w10_ssh', 'text': '\n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n', 'tags': '', 'url': 'w10_ssh.html'}, {'title': 'w12', 'text': '', 'tags': '', 'url': 'w12.html'}, {'title': 'NXOpen Python', 'text': '\n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n', 'tags': '', 'url': 'NXOpen Python.html'}, {'title': 'cadlab startup', 'text': '\n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n', 'tags': '', 'url': 'cadlab startup.html'}, {'title': 'Graduate School', 'text': '\n \n \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n', 'tags': '', 'url': 'Graduate School.html'}, {'title': 'W14', 'text': '\n 零件檔案\xa0 https://drive.google.com/drive/u/0/folders/1H_NjSCdKmfm9RMdCZFFFjZ3thyxcSnDn \n \n \n 模擬檔案\xa0 https://drive.google.com/drive/u/0/folders/1H_NjSCdKmfm9RMdCZFFFjZ3thyxcSnDn \n \n \n \n python場景設定 \n \n \n \n', 'tags': '', 'url': 'W14.html'}, {'title': 'W15', 'text': '組合件及零件和模擬檔: https://gmnfuedutw-my.sharepoint.com/:f:/g/personal/40923111_gm_nfu_edu_tw/Eg9zB3kmOpVArCv3xbUZf6IBAd6yM-H5w2KqK4-aY1qrDg?e=B7s6XI \n \n 吸盤程式碼 \n function sysCall_init()   s=sim.getObject(\'./Sensor\')  l=sim.getObject(\'./LoopClosureDummy1\')  l2=sim.getObject(\'./LoopClosureDummy2\')  b=sim.getObject(\'.\')  suctionPad=sim.getObject(\'/suctionPad\')  suctionPadLink=sim.getObject(\'./Link\')  infiniteStrength=true  maxPullForce=3  maxShearForce=1  maxPeelTorque=0.1  enabled=true  sim.setLinkDummy(l,-1)  sim.setObjectParent(l,b,true)  m=sim.getObjectMatrix(l2,-1)  sim.setObjectMatrix(l,-1,m) end function sysCall_cleanup()   sim.setLinkDummy(l,-1)  sim.setObjectParent(l,b,true)  m=sim.getObjectMatrix(l2,-1)  sim.setObjectMatrix(l,-1,m) end  function sysCall_sensing()   parent=sim.getObjectParent(l)  -- use the suctionPad to pass the activity variable   local on = sim.readCustomDataBlock(suctionPad,\'activity\')  if on =="on" then  enabled = true  else  enabled = false  end  -- keep the original suctionpad script  if not enabled then  if (parent~=b) then  sim.setLinkDummy(l,-1)  sim.setObjectParent(l,b,true)  m=sim.getObjectMatrix(l2,-1)  sim.setObjectMatrix(l,-1,m)  end  else  if (parent==b) then  -- Here we want to detect a respondable shape, and then connect to it with a force sensor (via a loop closure dummy dummy link)  -- However most respondable shapes are set to "non-detectable", so "sim.readProximitySensor" or similar will not work.  -- But "sim.checkProximitySensor" or similar will work (they don\'t check the "detectable" flags), but we have to go through all shape objects!  index=0  while true do  shape=sim.getObjects(index,sim.object_shape_type)  if (shape==-1) then  break  end  if (shape~=b) and (sim.getObjectInt32Param(shape,sim.shapeintparam_respondable)~=0) and (sim.checkProximitySensor(s,shape)==1) then  -- Ok, we found a respondable shape that was detected  -- We connect to that shape:  -- Make sure the two dummies are initially coincident:  sim.setObjectParent(l,b,true)  m=sim.getObjectMatrix(l2,-1)  sim.setObjectMatrix(l,-1,m)  -- Do the connection:  sim.setObjectParent(l,shape,true)  sim.setLinkDummy(l,l2)  break  end  index=index+1  end  else  -- Here we have an object attached  if (infiniteStrength==false) then  -- We might have to conditionally beak it apart!  result,force,torque=sim.readForceSensor(suctionPadLink) -- Here we read the median value out of 5 values (check the force sensor prop. dialog)  if (result>0) then  breakIt=false  if (force[3]>maxPullForce) then breakIt=true end  sf=math.sqrt(force[1]*force[1]+force[2]*force[2])  if (sf>maxShearForce) then breakIt=true end  if (torque[1]>maxPeelTorque) then breakIt=true end  if (torque[2]>maxPeelTorque) then breakIt=true end  if (breakIt) then  -- We break the link:  sim.setLinkDummy(l,-1)  sim.setObjectParent(l,b,true)  m=sim.getObjectMatrix(l2,-1)  sim.setObjectMatrix(l,-1,m)  end  end  end  end  end end \n 手臂程式碼 \n function sysCall_init() axis1=sim.getObject(\'/motor1\')\xa0 \xa0\xa0 axis2=sim.getObject(\'/motor2\') axis3=sim.getObject(\'/motor6\') suctionPad=sim.getObject(\'/suctionPad\') rotation1 = 0 rotation2 = 0 rotation3 = 0 deg = math.pi/180. enableSuctionPad(true) end function enableSuctionPad(enable) -- use the suctionPad object to pass the variable activity value -- if enable = true, the activity = \'on\' if enable then sim.writeCustomDataBlock(suctionPad,\'activity\',\'on\') else sim.writeCustomDataBlock(suctionPad,\'activity\',\'off\') end end function sysCall_actuation() --[[ rotation1 = rotation1 + 1*deg print(rotation1) sim.setJointPosition(axis1, -rotation1) sim.setJointPosition(axis2, -rotation1) ]] message, auxiliaryData=sim.getSimulatorMessage() while message ~= -1 do key=auxiliaryData[1] sim.addStatusbarMessage(\'user press key:\'..key) if (message==sim.message_keypress) then --if (auxiliaryData[1]==112) then --p activate the suction pad if (auxiliaryData[1]==string.byte(\'p\')) then -- if key p pressed activate the suction mode --sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),\'active\',\'true\') enableSuctionPad(true) end -- if p if (auxiliaryData[1]==string.byte(\'q\')) then --q deactivate the suction pad -- if key q pressed deactivate the suction mode --sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),\'active\',\'false\') enableSuctionPad(false) end -- if q if (auxiliaryData[1]==string.byte(\'k\')) then --k right turn in degree -- if key k pressed axis1 angle adds 2 degrees rotation1 = rotation1 + 1*deg --sim.setJointPosition(axis1, rotation1) sim.setJointTargetPosition(axis1, rotation1) end -- if k if (auxiliaryData[1]==string.byte(\'l\')) then --l left turn in degree -- if key l pressed axis1 angle substract 2 degrees rotation1 = rotation1 - 1*deg --sim.setJointPosition(axis1, rotation1) sim.setJointTargetPosition(axis1, rotation1) end -- if l -- for joint2 start ########################################################## if (auxiliaryData[1]== string.byte("h")) then --r right turn in degree -- if key r pressed axis1 angle adds 2 degrees rotation2 = rotation2 + 1*deg --sim.setJointPosition(axis2, rotation2) sim.setJointTargetPosition(axis2, rotation2) end -- if k if (auxiliaryData[1]==string.byte("j")) then -- if key j pressed axis2 angle substract 2 degrees rotation2 = rotation2 - 1*deg --sim.setJointPosition(axis2, rotation2) sim.setJointTargetPosition(axis2, rotation2) end -- if j -- for joint2 end ########################################################## -- for joint3 start ########################################################## if (auxiliaryData[1]== string.byte("f")) then -- if key f pressed axis3 angle adds 2 degrees rotation3 = rotation3 + 1*deg --sim.setJointPosition(axis3, rotation3) sim.setJointTargetPosition(axis3, rotation3) end -- if f if (auxiliaryData[1]==string.byte("g")) then -- if key g pressed axis3 angle substract 2 degrees rotation3 = rotation3 - 1*deg --sim.setJointPosition(axis3, rotation3) sim.setJointTargetPosition(axis3, rotation3) end -- if g -- for joint2 end ########################################################## if (auxiliaryData[1]==100) then --d suction pad down -- if key d pressed axis3 will down 0.05 m distance3 = distance3 - 0.05 sim.setJointPosition(axis3, distance3) end -- if d if (auxiliaryData[1]==117) then --u suction pad up -- if key u pressed axis3 will up 0.05 m distance3 = distance3 + 0.05 sim.setJointPosition(axis3, distance3) end -- if u if (auxiliaryData[1]==99) then --c coordinate of block blockPosition = sim.getObjectPosition(block, BaseFrame) sim.addStatusbarMessage("coordinate:"..table_to_string(blockPosition)) end --if c end -- if message, auxiliaryData=sim.getSimulatorMessage() end -- while end -- function \n function sysCall_sensing() --[[ -- Read Proximity sensor (0= nothing detected, 1 = object detected) local res = sim.readProximitySensor(proximity) \n -- Check if possible to insert an new box if (sim.getSimulationTime()-T_last_inserted > T_insert) and not hasStopped then insertBox() end \n -- If proximity sensor detects an object, stop the belt, stop inserting objects if res == 1 and not hasStopped then if boolList[1] then sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",0) deltaTime = sim.getSimulationTime()-T_last_inserted hasStopped = true else local box = table.remove(boxList,1) local boxDummy = table.remove(boxDummyList,1) table.remove(boolList,1) \n sim.removeObject(box) sim.removeObject(boxDummy) end end \n -- If proximity sensor detects nothing and belt has stopped, start belt, continue inserting if res == 0 and hasStopped then sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",beltSpeed) hasStopped = false T_last_inserted = sim.getSimulationTime()-deltaTime end ]]-- end function sysCall_sensing() -- put your sensing code here end function sysCall_cleanup() -- do some clean-up here end -- Convert a lua table into a lua syntactically correct string function table_to_string(tbl) local result = "{" for k, v in pairs(tbl) do -- Check the key type (ignore any numerical keys - assume its an array) if type(k) == "string" then result = result.."[\\""..k.."\\"]".."=" end -- Check the value type if type(v) == "table" then result = result..table_to_string(v) elseif type(v) == "boolean" then result = result..tostring(v) else v = round(v, 4) result = result.."\\""..v.."\\"" end result = result.."," end -- Remove leading commas from the result if result ~= "" then result = result:sub(1, result:len()-1) end return result.."}" end function round(x, n) n = math.pow(10, n or 0) x = x * n if x >= 0 then x = math.floor(x + 0.5) else x = math.ceil(x - 0.5) end return x / n end function insertBox() -- Generate random numbers local rand1 = math.random() local rand2 = math.random() local rand3 = math.random() -- Generate random disturbances on position and orientation local dx = (2*rand1-1)*0.1 local dy = (2*rand2-1)*0.1 local dphi = (2*rand3-1)*0.5 local disturbedCoordinates = {0,0,0} disturbedCoordinates[1] = insertCoordinate[1]+dx disturbedCoordinates[2] = insertCoordinate[2]+dy disturbedCoordinates[3] = insertCoordinate[3] -- Copy and paste box and boxDummy local insertedObjects = sim.copyPasteObjects({box,boxDummy},0) -- Update last inserted box time T_last_inserted = sim.getSimulationTime() -- Move and rotate sim.setObjectPosition(insertedObjects[1],-1,disturbedCoordinates) sim.setObjectOrientation(insertedObjects[1],-1,{0,0,dphi}) -- Store handles to boxes and dummies table.insert(boxList,insertedObjects[1]) table.insert(boxDummyList,insertedObjects[2]) -- Decide if object is good or bad local decision = math.random() if decision <= goodPercentage then -- Object is good, assign goodColor sim.setShapeColor(insertedObjects[1],nil,sim.colorcomponent_ambient_diffuse,goodColor) table.insert(boolList,true) else -- Object is bad, assign random color sim.setShapeColor(insertedObjects[1],nil,sim.colorcomponent_ambient_diffuse,{rand1,rand2,rand3}) table.insert(boolList,false) end end -- See the user manual or the available code snippets for additional callback functions and details \n \n', 'tags': '', 'url': 'W15.html'}, {'title': 'w16h', 'text': '', 'tags': '', 'url': 'w16h.html'}, {'title': 'Online Exam-2', 'text': '1.已知左側綠色底座的 uArm 機械手臂, 其基座座標原點位於絕對座標 (1.0, 0.25, 0), 啟動模擬後 green_suctionpad_frame 座標原點則位於 (0.22859, 0.26047, 0.36576), 請列出運算式說明, 啟動模擬後 joint1, joint2 與 joint3 分別以逆時針旋轉 5 度後, 求 green_suctionpad_frame 的絕對座標值. \n 2.已知左側 uarm 前方的紅色方塊頂端中心座標值為 (0.2, 0.4, 0.1), 請列出運算式說明左側 uarm 機械手臂的 joint1, joint2 與 joint3 該如何旋轉才能讓 end effector 的吸盤末端中心點移動至紅色方塊頂端中心? \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'Online Exam-2.html'}, {'title': 'rotating_cuboid-2', 'text': '\n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n', 'tags': '', 'url': 'rotating_cuboid-2.html'}, {'title': 'Visualization Stream-2', 'text': '打開coppeliasim打開uarm_nx_tkinter_gui_control_exhaustiv檔，再來將uarm_tkinter_control.py丟到scite打開執行他，之後先把coppeliasim裡的程式先執行，外部在執行，在按to cannect連接起來，就可以用遠端控制。 \n \n \n', 'tags': '', 'url': 'Visualization Stream-2.html'}, {'title': '每周進度', 'text': '', 'tags': '', 'url': '每周進度.html'}, {'title': 'W1', 'text': '', 'tags': '', 'url': 'W1.html'}, {'title': '環境網路設定和建立倉儲', 'text': '下載 cadlab_network_setup.zip，重新開機，以管理員權限執行ipv6_network_setup.bat \n', 'tags': '', 'url': '環境網路設定和建立倉儲.html'}, {'title': 'W2', 'text': '建立小組倉儲 \n 下載NX1980更改執行碼 \n 在編輯器打開 start_nx19bat 在 28000@192.168.56.3 開頭打上 REM 變成註解。 \n \n', 'tags': '', 'url': 'W2.html'}, {'title': 'W3', 'text': '', 'tags': '', 'url': 'W3.html'}, {'title': 'Nx _WINK', 'text': '圖檔:\xa0 https://drive.google.com/drive/folders/1wbnDwd6IAOg33UJVGF2t8vmvMRrWvids?usp=sharing \n 我負責的影片為6到10部 \n 這部影片主要解說基本的NX入門常用操作，從開始的尺寸預設(代號 , 尺忖公式)到草圖建立→長料 →除料→挖孔→基本的外型長出到最後的佈圖讓入門者能夠快速地了解它的功用和快速上手 \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \nloop="loop" muted=""playsinline=""autoplay="autoplay"> \n \n   \n \n \n \n', 'tags': '', 'url': 'Nx _WINK.html'}, {'title': 'W4', 'text': '\n 小組與大組開會， 利用網頁簡報呈現執行流程與結果', 'tags': '', 'url': 'W4.html'}, {'title': 'W5', 'text': '', 'tags': '', 'url': 'W5.html'}, {'title': 'W6', 'text': '\n 任務： 建立個人 Blog 並查驗 \n \n 1.在 cmd 輸入 leo 啟動 Leo E ditor', 'tags': '', 'url': 'W6.html'}, {'title': 'w9', 'text': '自評成績', 'tags': '', 'url': 'w9.html'}, {'title': 'w11', 'text': '解決 透過 SSH 協定時， 合併衝突的問題 \n \n \n', 'tags': '', 'url': 'w11.html'}, {'title': 'w11s3', 'text': '', 'tags': '', 'url': 'w11s3.html'}, {'title': '40923111', 'text': '\n 第一部:機械手臂NX組合過程 \n 組合圖檔及模擬檔:\xa0 https://drive.google.com/drive/folders/1dqfmdfYTwDR9Hr80g17XtA-oG470Nke2?usp=sharing \n 第二部:組合檔轉stl後匯入 CoppeliaSim \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \nloop="loop" muted="" playsinline=""autoplay="autoplay"> \n \n   \n \n \n \n \n \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n w10_block_iu \n \n \n \n script> var winkVideoData = { dataVersion: 1, frameRate: 10, buttonFrameLength: 5, buttonFrameOffset: 2, frameStops: { }, }; \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \nloop="loop" muted="" playsinline=""autoplay="autoplay">\n \n \n   \n \n \n \n \n \n \n \n \n  接下來將 mp4 檔案從 downloads 目錄取出  \n \n \n \n   \n \n \n \n \n \n \n \n', 'tags': '', 'url': '40923111.html'}]};